import requests
from bs4 import BeautifulSoup
import time 
from sys import argv
import argparse

start = time.perf_counter()
print("[+] Start \n" +"="*50 )
StartTime = time.strftime("%H:%M:%S")
print(f"StartTime : %s " %(StartTime))

def detect_h2(h):
    ports = 8082
    URL = f"http://{h}:{ports}/"
    print("input url", URL)
    
    r1 = requests.get(URL)
    r1.close()
    #print(dir(r1), "\n")
    out_html = r1.content # response
    r_url = r1.url ## request url

    b1 = BeautifulSoup(out_html, "html.parser")
    #b2 = BeautifulSoup(r1.text, "html.parser")
    
    k1 = b1.head.title.text
    search = "Sorry, remote connections ('webAllowOthers') are disabled on this server."
    k3 = None
    p1 = None
    try:
        k3 = b1.h2.text
        p1 = str(b1.body.p.text).strip()
        print(p1)
    except AttributeError:
        print("None Attribute Error")
        pass

    if k1 == "H2 Console" and p1 == search:
        print(f"H2 console {r_url} but",p1)
        
    elif k1 == "H2 Console" and (k3 == None or k3 == "No Javascript" ):
        #if len(key2) < 10
        print(f"Vulnerable H2 Console detected on {r_url}, further validation is required.")
           

def validation_h2(ldap, strong):
    ldap_url=str(ldap)

if __name__ == "__main__":
    # place the IP list on the directory as the script, name the file IP.txt or modifiy the script.
    filename = "IP.txt"
    IP_list = []

    with open(filename, 'r') as list:
        IPs = list.readlines()
        #print(IPs)
    #print(IPs.sort())
    
    ## manual url testing
    #IP = "3.21.163.236"
    #IP = "193.206.59.85"
    #IP = "104.130.31.128"
    print (IPs)

    for i in IPs:
        print(i.strip())
        try:
            detect_h2(i.strip())
        except requests.ConnectionError:
            print(f"Connection timeout for {i}")
        print(f"="*50 )

    #detect_h2(IP)
    #print ( IP_list)
    
finish = time.perf_counter()
print(f"Script time : {round(finish-start )}")
EndTime = time.strftime("%H:%M:%S")
print(f"End Time : %s " %(EndTime))
print(f"="*50 )
print("[+] The End")
### About The Script
# The script detect vulnerable H2 database server for the give list of IPs, 
# it can identify the H2 Console web pages and check for access restrictions.
###

# Reference: an simpler options  
# nmap -sV --script http-title --script-args "http-title.url=/" -p80,443,8000-9000 192.168.0.0/8 | grep "H2 Console"
# https://jfrog.com/blog/the-jndi-strikes-back-unauthenticated-rce-in-h2-database-console/